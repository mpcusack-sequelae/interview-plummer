// This file is auto-generated by @hey-api/openapi-ts

export const $GenerativeMultipleChoice = {
    properties: {
        id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Id',
            default: 'NA'
        },
        prompt: {
            type: 'string',
            title: 'Prompt'
        },
        type: {
            type: 'string',
            enum: ['GenerativeMultipleChoice'],
            const: 'GenerativeMultipleChoice',
            title: 'Type',
            default: 'GenerativeMultipleChoice'
        },
        question: {
            type: 'string',
            title: 'Question'
        },
        options: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Options'
        }
    },
    type: 'object',
    required: ['prompt', 'question', 'options'],
    title: 'GenerativeMultipleChoice'
} as const;

export const $GenerativeSingleChoice = {
    properties: {
        id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Id',
            default: 'NA'
        },
        type: {
            type: 'string',
            enum: ['GenerativeSingleChoice'],
            const: 'GenerativeSingleChoice',
            title: 'Type',
            default: 'GenerativeSingleChoice'
        },
        question: {
            type: 'string',
            title: 'Question'
        },
        prompt: {
            type: 'string',
            title: 'Prompt'
        },
        options: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Options'
        }
    },
    type: 'object',
    required: ['question', 'prompt', 'options'],
    title: 'GenerativeSingleChoice'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $MultipleChoice = {
    properties: {
        id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Id',
            default: 'NA'
        },
        type: {
            type: 'string',
            enum: ['MultipleChoice'],
            const: 'MultipleChoice',
            title: 'Type',
            default: 'MultipleChoice'
        },
        question: {
            type: 'string',
            title: 'Question'
        },
        options: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Options'
        }
    },
    type: 'object',
    required: ['question', 'options'],
    title: 'MultipleChoice'
} as const;

export const $NewQuizEntry = {
    properties: {
        answers: {
            items: {
                items: {
                    type: 'integer'
                },
                type: 'array'
            },
            type: 'array',
            title: 'Answers'
        }
    },
    type: 'object',
    required: ['answers'],
    title: 'NewQuizEntry'
} as const;

export const $Quiz = {
    properties: {
        quizId: {
            type: 'string',
            title: 'Quizid'
        },
        title: {
            type: 'string',
            title: 'Title'
        },
        description: {
            type: 'string',
            title: 'Description'
        },
        controls: {
            items: {
                anyOf: [
                    {
                        '$ref': '#/components/schemas/SingleChoice'
                    },
                    {
                        '$ref': '#/components/schemas/MultipleChoice'
                    },
                    {
                        '$ref': '#/components/schemas/GenerativeSingleChoice'
                    },
                    {
                        '$ref': '#/components/schemas/GenerativeMultipleChoice'
                    }
                ]
            },
            type: 'array',
            title: 'Controls'
        }
    },
    type: 'object',
    required: ['quizId', 'title', 'description', 'controls'],
    title: 'Quiz'
} as const;

export const $QuizEntry = {
    properties: {
        userId: {
            type: 'string',
            title: 'Userid'
        },
        quizId: {
            type: 'string',
            title: 'Quizid'
        },
        quizEntryId: {
            type: 'string',
            title: 'Quizentryid'
        },
        created: {
            type: 'string',
            format: 'date-time',
            title: 'Created'
        },
        email: {
            type: 'string',
            title: 'Email'
        },
        firstName: {
            type: 'string',
            title: 'Firstname'
        },
        lastName: {
            type: 'string',
            title: 'Lastname'
        },
        answers: {
            items: {
                items: {
                    type: 'integer'
                },
                type: 'array'
            },
            type: 'array',
            title: 'Answers'
        }
    },
    type: 'object',
    required: ['userId', 'quizId', 'quizEntryId', 'created', 'email', 'firstName', 'lastName', 'answers'],
    title: 'QuizEntry'
} as const;

export const $QuizParticipant = {
    properties: {
        userId: {
            type: 'string',
            title: 'Userid'
        },
        quizId: {
            type: 'string',
            title: 'Quizid'
        },
        quizEntryId: {
            type: 'string',
            title: 'Quizentryid'
        },
        email: {
            type: 'string',
            title: 'Email'
        },
        firstName: {
            type: 'string',
            title: 'Firstname'
        },
        lastName: {
            type: 'string',
            title: 'Lastname'
        }
    },
    type: 'object',
    required: ['userId', 'quizId', 'quizEntryId', 'email', 'firstName', 'lastName'],
    title: 'QuizParticipant'
} as const;

export const $SingleChoice = {
    properties: {
        id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Id',
            default: 'NA'
        },
        type: {
            type: 'string',
            enum: ['SingleChoice'],
            const: 'SingleChoice',
            title: 'Type',
            default: 'SingleChoice'
        },
        question: {
            type: 'string',
            title: 'Question'
        },
        options: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Options'
        }
    },
    type: 'object',
    required: ['question', 'options'],
    title: 'SingleChoice'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;